name: Lint

on:
  workflow_call:

concurrency:
  group: lint-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  # Rust formatting and basic validation
  rust-format:
    name: Rust Format
    runs-on: ubuntu-latest
    outputs:
      rust-version: ${{ steps.rust-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get Rust version from toolchain
        id: rust-version
        run: |
          RUST_VERSION=$(grep 'channel = ' rust-toolchain.toml | cut -d '"' -f 2)
          echo "version=$RUST_VERSION" >> $GITHUB_OUTPUT
          echo "Rust version: $RUST_VERSION"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.rust-version.outputs.version }}

      - name: Install nightly toolchain for rustfmt
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '25.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse3-dev

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "lint-rust"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Check Cargo.toml format
        run: cargo check --workspace --all-targets

      - name: Check formatting
        run: cargo +nightly fmt --all -- --check

  # Protocol buffer linting with Buf
  proto-lint:
    name: Protocol Buffer Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Buf lint
        run: cd api && buf lint

      - name: Buf format check
        run: cd api && buf format --diff --exit-code

  # Aggregator job to ensure all linting passes
  lint-success:
    name: Lint Success
    runs-on: ubuntu-latest
    needs: [rust-format, proto-lint]
    if: always()
    steps:
      - name: Check all lint jobs status
        run: |
          if [[ "${{ needs.rust-format.result }}" != "success" || \
                "${{ needs.proto-lint.result }}" != "success" ]]; then
            echo "One or more lint jobs failed"
            exit 1
          fi
          echo "All lint jobs passed successfully"
