name: Test

on:
  workflow_call:

concurrency:
  group: test-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  # Get Rust version for test jobs
  rust-version:
    name: Get Rust Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rust-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get Rust version from toolchain
        id: rust-version
        run: |
          RUST_VERSION=$(grep 'channel = ' rust-toolchain.toml | cut -d '"' -f 2)
          echo "version=$RUST_VERSION" >> $GITHUB_OUTPUT
          echo "Rust version: $RUST_VERSION"

  # Multi-platform Rust testing
  rust-test:
    name: Rust Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: rust-version
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ needs.rust-version.outputs.version }}

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '25.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse3-dev

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "test-${{ matrix.os }}"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Run tests
        run: cargo nextest run --workspace --all-features

  # Aggregator job to ensure all tests pass
  test-success:
    name: Test Success
    runs-on: ubuntu-latest
    needs: [rust-test]
    if: always()
    steps:
      - name: Check all test jobs status
        run: |
          if [[ "${{ needs.rust-test.result }}" != "success" ]]; then
            echo "One or more test jobs failed"
            exit 1
          fi
          echo "All test jobs passed successfully"
