FROM rust:1.77.2 as builder

ENV LANG en_US.utf8
WORKDIR /kiseki

# Install dependencies.
RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && apt-get install -y \
    curl \
    fuse3 libfuse3-dev \
    openssl libssl-dev \
    clang \
    protobuf-compiler \
    curl \
    git \
    build-essential \
    pkg-config 

COPY docker/entrypoint.sh .

#Build the project in release mode.
RUN --mount=target=. \
    --mount=type=cache,target=/root/.cargo/registry \
    cargo build --release --package kiseki-binary --target-dir /out/target 

# Export the binary to the clean image.
FROM ubuntu:22.04 as base

ARG OUTPUT_DIR

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get \
    -y install ca-certificates \
    fuse3 libfuse3-dev

WORKDIR /kiseki
COPY --from=builder /out/target/release/kiseki-binary /kiseki/bin/
COPY --from=builder /kiseki/entrypoint.sh /kiseki/bin/entrypoint.sh
RUN chmod +x /kiseki/bin/entrypoint.sh
ENV PATH /kiseki/bin/:$PATH

# Dummy command to keep the container running
# CMD ["tail", "-f", "/dev/null"]

RUN kiseki-binary format
# ENTRYPOINT [ kiseki-binary ]
CMD ["tail", "-f", "/dev/null"]